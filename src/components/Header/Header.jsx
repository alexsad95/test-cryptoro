import React, { useEffect, useState } from 'react';
import { useAppStore } from '../../stores/appStore.js';
import './Header.css';

const Header = () => {
  const { content } = useAppStore();
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const [activeNavItem, setActiveNavItem] = useState(1); // ID of active navigation item

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 50);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const handleNavClick = (itemId, href) => {
    // Transition animation
    setActiveNavItem(itemId);

    // Smooth scroll to section
    const targetElement = document.querySelector(href);
    if (targetElement) {
      targetElement.scrollIntoView({
        behavior: 'smooth',
        block: 'start',
      });
    }
  };

  if (!content?.header) return null;

  const { navigation, actions } = content.header;

  const getActionIcon = type => {
    switch (type) {
      case 'search':
        return (
          <svg
            viewBox="0 0 22 22"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.91518 0.554688C7.60788 0.555387 6.31897 0.862769 5.15206 1.45213C3.98514 2.04149 2.97277 2.89639 2.1963 3.94811C1.41983 4.99984 0.900924 6.21906 0.681289 7.50778C0.461655 8.7965 0.547417 10.1188 0.931684 11.3683C1.31595 12.6179 1.988 13.7598 2.89382 14.7025C3.79965 15.6451 4.91397 16.362 6.14724 16.7957C7.38051 17.2294 8.69832 17.3677 9.99476 17.1995C11.2912 17.0314 12.5301 16.5614 13.6119 15.8274L18.7766 20.9879C18.9201 21.1419 19.0931 21.2653 19.2853 21.351C19.4775 21.4366 19.685 21.4827 19.8954 21.4864C20.1058 21.4901 20.3148 21.4514 20.5099 21.3726C20.705 21.2938 20.8822 21.1765 21.031 21.0277C21.1798 20.8789 21.2971 20.7016 21.3759 20.5065C21.4547 20.3114 21.4934 20.1024 21.4897 19.892C21.486 19.6816 21.44 19.4741 21.3543 19.2819C21.2687 19.0897 21.1452 18.9167 20.9912 18.7733L15.8307 13.6085C16.6845 12.352 17.1796 10.8865 17.2628 9.36967C17.346 7.85281 17.0142 6.34196 16.3031 4.99956C15.5919 3.65717 14.5283 2.534 13.2266 1.75084C11.9249 0.967675 10.4343 0.554137 8.91518 0.554688ZM3.69196 8.91183C3.69196 7.52655 4.24226 6.198 5.22181 5.21846C6.20135 4.23892 7.52989 3.68862 8.91518 3.68862C10.3005 3.68862 11.629 4.23892 12.6085 5.21846C13.5881 6.198 14.1384 7.52655 14.1384 8.91183C14.1384 10.2971 13.5881 11.6257 12.6085 12.6052C11.629 13.5847 10.3005 14.135 8.91518 14.135C7.52989 14.135 6.20135 13.5847 5.22181 12.6052C4.24226 11.6257 3.69196 10.2971 3.69196 8.91183Z"
              fill="currentColor"
            />
          </svg>
        );
      case 'favorites':
        return (
          <svg
            viewBox="0 0 22 22"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M15.3538 0.357422C19.0957 0.357422 21.6049 4.12898 21.6049 7.64109C21.6049 14.7704 11.1875 20.6074 10.9978 20.6074C10.808 20.6074 0.390625 14.7704 0.390625 7.64109C0.390625 4.12898 2.8998 0.357422 6.64177 0.357422C8.78088 0.357422 10.1857 1.50281 10.9978 2.52291C11.8098 1.50281 13.2147 0.357422 15.3538 0.357422Z"
              fill="currentColor"
            />
          </svg>
        );
      case 'cart':
        return (
          <svg
            viewBox="0 0 22 22"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M1.29249 0.392578C1.0533 0.392578 0.823907 0.485706 0.654775 0.651475C0.485643 0.817244 0.390625 1.04207 0.390625 1.27651C0.390625 1.51094 0.485643 1.73577 0.654775 1.90154C0.823907 2.06731 1.0533 2.16044 1.29249 2.16044H1.7362C1.93204 2.16077 2.12244 2.22357 2.27864 2.33934C2.43483 2.45512 2.54834 2.61757 2.60199 2.80217L5.4627 12.6138C5.6245 13.1675 5.96584 13.6545 6.4351 14.0012C6.90436 14.3479 7.47603 14.5354 8.06368 14.5354H16.3049C16.8457 14.5355 17.3742 14.3767 17.8221 14.0796C18.2699 13.7824 18.6167 13.3605 18.8175 12.8683L21.4762 6.35202C21.5855 6.08389 21.6261 5.79359 21.5945 5.50651C21.5629 5.21943 21.46 4.94431 21.2949 4.70519C21.1298 4.46608 20.9074 4.27024 20.6472 4.13481C20.387 3.99938 20.0969 3.92848 19.8023 3.92829H4.80615L4.33537 2.31601C4.17399 1.76227 3.83307 1.27507 3.36414 0.928056C2.89522 0.581044 2.32378 0.393081 1.7362 0.392578H1.29249ZM8.50739 21.6069C8.8627 21.6069 9.21452 21.5383 9.54278 21.405C9.87103 21.2717 10.1693 21.0764 10.4205 20.8302C10.6718 20.5839 10.8711 20.2916 11.007 19.9699C11.143 19.6481 11.213 19.3033 11.213 18.9551C11.213 18.6068 11.143 18.262 11.007 17.9403C10.8711 17.6186 10.6718 17.3262 10.4205 17.08C10.1693 16.8337 9.87103 16.6384 9.54278 16.5051C9.21452 16.3719 8.8627 16.3033 8.50739 16.3033C7.78983 16.3033 7.10165 16.5827 6.59425 17.08C6.08686 17.5773 5.8018 18.2518 5.8018 18.9551C5.8018 19.6584 6.08686 20.3329 6.59425 20.8302C7.10165 21.3275 7.78983 21.6069 8.50739 21.6069ZM15.7223 21.6069C16.0776 21.6069 16.4294 21.5383 16.7577 21.405C17.0859 21.2717 17.3842 21.0764 17.6354 20.8302C17.8867 20.5839 18.086 20.2916 18.2219 19.9699C18.3579 19.6481 18.4279 19.3033 18.4279 18.9551C18.4279 18.6068 18.3579 18.262 18.2219 17.9403C18.086 17.6186 17.8867 17.3262 17.6354 17.08C17.3842 16.8337 17.0859 16.6384 16.7577 16.5051C16.4294 16.3719 16.0776 16.3033 15.7223 16.3033C15.0047 16.3033 14.3166 16.5827 13.8092 17.08C13.3018 17.5773 13.0167 18.2518 13.0167 18.9551C13.0167 19.6584 13.3018 20.3329 13.8092 20.8302C14.3166 21.3275 15.0047 21.6069 15.7223 21.6069Z"
              fill="currentColor"
            />
          </svg>
        );
      default:
        return null;
    }
  };

  return (
    <header className={`header ${isScrolled ? 'header--scrolled' : ''}`}>
      <div className="header__container">
        <div className="header__content">
          {/* Logo */}
          <div className="header__logo">
            <a href="#home">
              <div className="logo-container">
                <div className="logo-icon">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 46 50"
                    fill="none"
                  >
                    <path
                      d="M43.8132 10.7958L25.0734 0.53722C24.4308 0.185295 23.7018 0 22.9598 0C22.2179 0 21.4892 0.185295 20.8467 0.53722L2.10681 10.7958C1.46545 11.1494 0.933274 11.6565 0.563561 12.2665C0.193847 12.8766 -0.000636862 13.5681 1.56676e-06 14.2717V34.7954C-0.000127041 35.4981 0.194508 36.1885 0.564231 36.7974C0.933953 37.4063 1.46599 37.9124 2.10681 38.2649L20.8467 48.53C21.4892 48.8819 22.2179 49.0671 22.9598 49.0671C23.7018 49.0671 24.4308 48.8819 25.0734 48.53L43.8132 38.2649C44.4548 37.9127 44.9879 37.4069 45.3588 36.798C45.7297 36.1892 45.9255 35.4986 45.9267 34.7954V14.2717C45.926 13.5676 45.7304 12.8759 45.3595 12.266C44.9886 11.656 44.4554 11.149 43.8132 10.7958Z"
                      fill="#17BE79"
                    />
                    <path
                      d="M24.7298 34.6376C22.3991 30.2802 20.0639 25.9251 17.7237 21.5722H10.7176L3.53282 15.6123C4.95975 18.5348 6.38667 21.4552 7.8136 24.3733H15.8331L22.9677 37.9155C23.567 36.7831 24.1447 35.7236 24.7298 34.6376Z"
                      fill="white"
                    />
                    <path
                      d="M34.4213 21.7452H27.7755L23.5522 30.2527L25.1427 33.4548L29.5418 24.5878H37.1556L41.2163 15.6123L34.4213 21.7452Z"
                      fill="white"
                    />
                  </svg>
                </div>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  height="20"
                  viewBox="0 0 248 32"
                  fill="none"
                >
                  <path
                    d="M0.703125 16.3246C0.703125 25.3484 8.20228 31.3789 18.4194 31.3789C21.697 31.4232 24.9292 30.6816 27.7881 29.2292V24.0424C25.026 25.7462 21.7612 26.6565 18.4194 26.6546C11.8518 26.6546 6.63618 22.78 6.63618 16.3246C6.63618 9.71914 11.6379 5.99466 18.4194 5.99466C21.7695 5.97985 25.0425 6.90549 27.7881 8.64432V3.50123C24.9602 1.97235 21.7117 1.20092 18.4194 1.27647C7.86423 1.27647 0.703125 6.99448 0.703125 16.3246Z"
                    fill="#272B37"
                  />
                  <path
                    d="M57.5837 10.6897C57.5837 5.9624 52.9348 2.38657 46.7572 2.38657H32.4985V30.2656H38.3648V19.1685H45.8443L53.8901 30.2656H60.7611L51.6256 18.1443C54.9302 16.8352 57.5837 14.1928 57.5837 10.6897ZM45.5541 14.9322H38.3365V6.81087H46.4669C49.5097 6.81087 51.6397 8.11388 51.6397 10.9442C51.668 13.6351 48.6252 14.9018 45.5824 14.9018L45.5541 14.9322Z"
                    fill="#272B37"
                  />
                  <path
                    d="M73.3043 18.2672L64.3835 2.38657H58.4059L68.8828 20.7603H71.9104L66.6527 30.2656H72.39L87.8461 2.38657H82.1085L73.3043 18.2672Z"
                    fill="#272B37"
                  />
                  <path
                    d="M105.114 2.38657H91.379V30.2656H97.0722V20.2655H105.258C111.295 20.2655 116.109 17.023 116.109 11.326C116.109 5.62902 111.178 2.38657 105.114 2.38657ZM97.0104 15.9079V6.78054H105.114C108.067 6.78054 110.217 8.45934 110.217 11.326C110.217 14.1927 108.177 15.9079 105.224 15.9079H97.0104Z"
                    fill="#272B37"
                  />
                  <path
                    d="M146.333 3.93566C149.454 3.19507 152.387 1.91154 154.97 0.15625C140.2 2.79695 125.01 2.84398 110.221 0.294811C112.26 1.90203 114.69 3.04823 117.31 3.63963V5.96393H128.943V30.2656H134.694V5.96393H146.333V3.93566Z"
                    fill="#272B37"
                  />
                  <path
                    d="M163.193 1.27141C152.717 1.27141 145.549 7.25951 145.549 16.323C145.549 25.3864 152.717 31.3808 163.193 31.3808C173.668 31.3808 180.877 25.4239 180.877 16.323C180.877 7.22201 173.709 1.27141 163.193 1.27141ZM163.193 26.6554C156.407 26.6554 151.414 22.8174 151.414 16.323C151.414 9.82853 156.407 5.99069 163.193 5.99069C169.979 5.99069 175.012 9.87229 175.012 16.323C175.012 22.7736 170.02 26.6554 163.193 26.6554Z"
                    fill="#272B37"
                  />
                  <path
                    d="M209.363 10.6897C209.363 5.9624 204.52 2.38657 198.085 2.38657H183.232V30.2656H189.343V19.1685H197.134L205.515 30.2656H212.673L203.157 18.1443C206.599 16.8352 209.363 14.1928 209.363 10.6897ZM196.832 14.9322H189.314V6.81087H197.783C200.953 6.81087 203.171 8.11388 203.171 10.9442C203.208 13.6351 200.031 14.9018 196.862 14.9018L196.832 14.9322Z"
                    fill="#272B37"
                  />
                  <path
                    d="M230.313 1.27141C219.835 1.27141 212.673 7.25951 212.673 16.323C212.673 25.3864 219.835 31.3808 230.313 31.3808C240.791 31.3808 248.001 25.4239 248.001 16.323C248.001 7.22201 240.839 1.27141 230.313 1.27141ZM230.313 26.6554C223.492 26.6554 218.539 22.8174 218.539 16.323C218.539 9.82853 223.526 5.99069 230.313 5.99069C237.1 5.99069 242.134 9.87229 242.134 16.323C242.134 22.7736 237.148 26.6554 230.313 26.6554Z"
                    fill="#272B37"
                  />
                </svg>
              </div>
            </a>
          </div>

          {/* Desktop Navigation */}
          <nav className="header__nav">
            <ul className="nav-list">
              {navigation.map((item, index) => (
                <li
                  key={item.id}
                  className={`nav-item ${activeNavItem === item.id ? 'nav-item--active' : ''}`}
                  style={{ animationDelay: `${index * 0.1}s` }}
                >
                  <a
                    href={item.href}
                    className="nav-link"
                    onClick={e => {
                      e.preventDefault();
                      handleNavClick(item.id, item.href);
                    }}
                  >
                    {item.title}
                  </a>
                </li>
              ))}
            </ul>
          </nav>

          {/* Action Icons */}
          <div className="header__actions">
            {actions.map(action => (
              <button
                key={action.id}
                className="action-btn"
                title={action.type}
              >
                {getActionIcon(action.type)}
              </button>
            ))}
          </div>

          {/* Mobile Menu Button */}
          <button
            className="header__mobile-toggle"
            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
          >
            <span
              className={`hamburger ${isMobileMenuOpen ? 'hamburger--active' : ''}`}
            ></span>
          </button>
        </div>

        {/* Mobile Menu */}
        {isMobileMenuOpen && (
          <div className="header__mobile-menu">
            <nav className="mobile-nav">
              <ul className="mobile-nav-list">
                {navigation.map(item => (
                  <li
                    key={item.id}
                    className={`mobile-nav-item ${activeNavItem === item.id ? 'mobile-nav-item--active' : ''}`}
                  >
                    <a
                      href={item.href}
                      className="mobile-nav-link"
                      onClick={e => {
                        e.preventDefault();
                        handleNavClick(item.id, item.href);
                        setIsMobileMenuOpen(false);
                      }}
                    >
                      {item.title}
                    </a>
                  </li>
                ))}
              </ul>
              <div className="mobile-actions">
                {actions.map(action => (
                  <button key={action.id} className="mobile-action-btn">
                    {getActionIcon(action.type)}
                    <span className="action-label">{action.type}</span>
                  </button>
                ))}
              </div>
            </nav>
          </div>
        )}
      </div>
    </header>
  );
};

export default Header;
